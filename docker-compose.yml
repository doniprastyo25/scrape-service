version: '3'

services:
  scrape:
    container_name: scrape_service
    image: scrape_service
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-j8dey789ilcebs8x(8lkey55je2r_+0_3p-z97i68j1$h106s=
      - POSTGRES_DB_NAME=user_scrape_db
      - POSTGRES_DB_USER=admin
      - POSTGRES_DB_PASSWORD=admin
      - POSTGRES_DB_HOST=db
      - POSTGRES_DB_PORT=5432
      - MONGO_DB_NAME=mongoscrape
      - MONGO_DB_HOST=mongodb
      - MONGO_DB_PORT=27017
      - MONGO_DB_USER=adminmongo
      - MONGO_DB_PASSWORD=adminmongo
      - MONGO_DB_AUTHENTICATION_SOURCE=admin
      - MONGO_DB_CONNECT=False
    depends_on:
      - db
      - mongodb
    restart: always
    networks:
      - serviceNetwork

  db:
    container_name: db_postgres
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=user_scrape_db
    restart: always
    networks:
      - serviceNetwork
      
  mongodb:
    container_name: db_mongo
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=adminmongo
      - MONGO_INITDB_ROOT_PASSWORD=adminmongo
      - MONGO_INITDB_DATABASE=mongoscrape

networks:
  serviceNetwork:

volumes:
  postgres_data:
  mongodb_data:
  cache:
    driver: local